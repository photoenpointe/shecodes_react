{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bear/Documents/GitHub/shecodes_react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nexport default function Search() {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [submit, setSubmit] = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=af11ba20356f076c2cd217a6bc9cd25e&units=metric`;\n    axios.get(url).then(showWeather);\n    let apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=af11ba20356f076c2cd217a6bc9cd25e&units=metric`;\n    axios.get(apiURL).then(showForecast);\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function showWeather(response) {\n    setSubmit(true);\n    setWeather({\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    });\n  }\n\n  function showForecast(response) {\n    setSubmit(true);\n    setWeather({\n      forecast: response.data.list[0]\n    });\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n\n  if (submit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [weather.city, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [Math.round(weather.temperature), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: weather.icon,\n          alt: weather.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), weather.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }, this), \"Wind: \", Math.round(weather.wind), \"m/s\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 56\n        }, this), \"Humidity: \", weather.humidity, \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), form, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(Search, \"kW+u0H2fJVQSzy1eBTvbZMWOzhg=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/bear/Documents/GitHub/shecodes_react/src/Weather.js"],"names":["axios","React","useState","Search","city","setCity","weather","setWeather","submit","setSubmit","handleSubmit","event","preventDefault","url","get","then","showWeather","apiURL","showForecast","updateCity","target","value","response","data","name","temperature","main","temp","description","wind","speed","humidity","icon","forecast","list","form","Math","round"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\n\n\nexport default function Search() {\n    const [city, setCity] = useState(\"\");\n    const [weather, setWeather] = useState(\"\");\n    const [submit, setSubmit] = useState(\"\");\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=af11ba20356f076c2cd217a6bc9cd25e&units=metric`;\n        axios.get(url).then(showWeather);\n        let apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=af11ba20356f076c2cd217a6bc9cd25e&units=metric`;\n        axios.get(apiURL).then(showForecast);\n}\n\n    function updateCity(event) {\n        setCity(event.target.value);\n    }\n    function showWeather(response) {\n        setSubmit(true);\n        setWeather({\n            city: response.data.name,\n            temperature: response.data.main.temp,\n            description: response.data.weather[0].description,\n            wind: response.data.wind.speed,\n            humidity: response.data.main.humidity,\n            icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon\n                }@2x.png`\n        });\n    }\n\n    function showForecast(response) {\n        setSubmit(true);\n        setWeather({\n            forecast: response.data.list[0],\n        })\n    }\n\n    let form = (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"search\"\n                placeholder=\"Enter a city...\"\n                onChange={updateCity}\n            />\n            <input type=\"submit\" value=\"Search\" />\n        </form>\n    );\n\n    if (submit) {\n        return (\n            <div>\n                <h1>{weather.city} </h1>\n                <h2>{Math.round(weather.temperature)}Â°C</h2>\n                <p className=\"detail\">\n                    <img src={weather.icon} alt={weather.description} />\n                    <br />\n                    {weather.description}<br/>\n                    Wind: {Math.round(weather.wind)}m/s<br />\n                    Humidity: {weather.humidity}% <br />\n                    \n                </p>\n                {form}\n                <br />\n                <h1>Forecast</h1>\n\n            </div>\n        );\n    } else {\n        return form;\n    }\n}"]},"metadata":{},"sourceType":"module"}